{"version":3,"file":"components-Form-Form-stories.41c7f66c.iframe.bundle.js","mappings":";;AAoBA;;ACCA","sources":["webpack://@osuresearch/ripple/./src/components/TableCollection/TableHeaders.tsx","webpack://@osuresearch/ripple/./src/components/TableCollection/TableCollection.tsx"],"sourcesContent":["import React from 'react';\nimport { Details, ConfirmButton, Text } from '@osuresearch/ui';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { fieldToPath, normalizeFieldPath } from '../../tools';\nimport { PageContext } from '../../hooks/usePageContext';\nimport { Field } from '../Field';\nimport { Markdown } from '../Markdown';\nimport { PageDefinition } from '../../types';\n\nexport type TableHeadersProps = {\n  isDisabled?: boolean\n  widths?: string[]\n  page: PageDefinition\n}\n\nconst TH = styled.th`\n  text-align: left;\n`\n\nexport function TableHeaders({ widths, page, isDisabled }: TableHeadersProps) {\n  return (\n    <thead>\n      <tr>\n        {Object.values(page.fields).map((field, i) =>\n          <TH key={i} style={{\n            width: (widths && widths.length > i) ? widths[i] : undefined\n          }}>\n            {field.label}\n          </TH>\n        )}\n\n        {!isDisabled &&\n          <TH style={{ width: '1%' }} />\n        }\n      </tr>\n    </thead>\n  )\n}\n","import React, { useState } from 'react';\nimport { FieldComponentProps } from '../../react';\nimport { Alert, Button, Code, Group, Heading, IconButton, Stack, Text } from '@osuresearch/ui';\nimport { useCollection } from '../../hooks/useCollection';\nimport { Link, useLocation } from 'react-router-dom';\nimport { EmptyCollection } from '../EmptyCollection';\nimport styled from 'styled-components';\nimport { TableRowInstance } from './TableRowInstance';\nimport { TableHeaders } from './TableHeaders';\nimport { CollectionInstanceId } from '../../types';\nimport { normalizeFieldPath } from '../../tools';\n\nexport type TableCollectionProps = FieldComponentProps<any> & {\n  editInline?: boolean\n  widths?: string[]\n}\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nexport function TableCollection({\n  name,\n  widths,\n  isDisabled,\n  ...props\n}: TableCollectionProps) {\n  const location = useLocation();\n  const { items, add, remove, definition } = useCollection(name);\n\n  const ids = Object.keys(items).filter((id) => !items[id]._deleted);\n  // const deletedIds = Object.keys(items).filter((id) => items[id]._deleted);\n\n  const onAdd = () => {\n    const id = add();\n  }\n\n  const onRemove = (id: CollectionInstanceId) => {\n    remove(id);\n  }\n\n  const getSubpageLink = (id: CollectionInstanceId) =>\n    normalizeFieldPath(location, `${name}.${id}`);\n\n  return (\n    <Stack align=\"stretch\">\n      <Heading level={3}>{props.label}</Heading>\n\n      {props.description}\n\n      {/* TODO: errorMessage, isRequired, necessityIndicator  */}\n\n      {ids.length > 0 &&\n      <Stack gap={0} align=\"stretch\">\n        <Table>\n          <TableHeaders widths={widths} page={definition.template} isDisabled={isDisabled} />\n          <tbody>\n          {ids.map((id) =>\n            <tr key={id}>\n              <TableRowInstance id={id} name={name} page={definition.template} />\n              {!isDisabled &&\n              <td>\n                <Group gap=\"xxs\" justify=\"end\">\n                  {/* <IconButton as={Link} name=\"edit\" label=\"Edit\" size={22} to={getSubpageLink(id)} /> */}\n                  <IconButton name=\"xmark\" label=\"Remove\" size={22} onPress={() => onRemove(id)} />\n                </Group>\n              </td>\n              }\n            </tr>\n          )}\n          </tbody>\n        </Table>\n\n        {!isDisabled &&\n        <Group justify=\"apart\" mt=\"sm\">\n          <div></div>\n          <Button onPress={onAdd}>Add another</Button>\n        </Group>\n        }\n      </Stack>\n      }\n\n      {ids.length < 1 &&\n      <EmptyCollection placeholder={props.placeholder} onAdd={onAdd} />\n      }\n    </Stack>\n  );\n}\n"],"names":[],"sourceRoot":""}